<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>docker on Harisankar P S | HsPS.in</title>
    <link>https://hsps.in/tags/docker/</link>
    <description>Recent content in docker on Harisankar P S | HsPS.in</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 26 Mar 2023 21:27:35 -0700</lastBuildDate><atom:link href="https://hsps.in/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Share Docker Images as Files</title>
      <link>https://hsps.in/post/share-docker-images-as-files/</link>
      <pubDate>Sun, 26 Mar 2023 21:27:35 -0700</pubDate>
      
      <guid>https://hsps.in/post/share-docker-images-as-files/</guid>
      <description>&lt;p&gt;Docker is a popular tool to containerize and share images. Recently we ported a POS system into a docker image and had to share it with a client before we setup a private registry. This is how we share the image from my dev machine to clients local server.&lt;/p&gt;
&lt;p&gt;Dev Machine: Kubuntu, 22.04&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Speed Up Docker Build</title>
      <link>https://hsps.in/post/speed-up-docker-build/</link>
      <pubDate>Fri, 10 Mar 2023 20:04:50 -0800</pubDate>
      
      <guid>https://hsps.in/post/speed-up-docker-build/</guid>
      <description>&lt;p&gt;Docker has become a popular tool in recent years for building and deploying applications in a portable and scalable way. However, the build process can sometimes be slow, especially for large applications with many dependencies. In this article, we&amp;rsquo;ll explore how we can optimize our Dockerfile to speed it up.&lt;/p&gt;
&lt;p&gt;When building a rails app for production we would need to do the following steps in the docker file&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;COPY . .
bundle install
yarn install
bundle &lt;span class=&#34;nb&#34;&gt;exec&lt;/span&gt; rails assets:precompile
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Docker after building each step it will cache that step. If the instructions/context of that steps or steps before haven&amp;rsquo;t change then docker will use the cache.&lt;/p&gt;
&lt;p&gt;So we need to make docker understand that there is no change, hence we can use the cache instead of rebuilding it.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Enable Docker Remote Api on Docker Host</title>
      <link>https://hsps.in/post/enable-docker-remote-api-on-docker-host/</link>
      <pubDate>Tue, 06 Sep 2022 20:21:42 -0700</pubDate>
      
      <guid>https://hsps.in/post/enable-docker-remote-api-on-docker-host/</guid>
      <description>&lt;p&gt;Docker engine has inbuild API service that allows you to control &amp;amp; modify your docker engine and docker instance using HTTP.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Setup NFS Server on Ubuntu</title>
      <link>https://hsps.in/post/setup-nfs-server-on-ubuntu/</link>
      <pubDate>Mon, 05 Sep 2022 18:29:12 -0700</pubDate>
      
      <guid>https://hsps.in/post/setup-nfs-server-on-ubuntu/</guid>
      <description>&lt;p&gt;NFS - Network File System is a distributed file system protocol developed by Sun Systems. It facilitates a client computer to have access to file/folder over network like a local folder. This is a easy/simple way to provide persistant storage for your docker-swarm or kubernetes cluster. In both these cases, the container (or pod) run on one of the available nodes (servers), and when we have replicas it will be running on more than one node. So local storage on the server is out of the question.&lt;/p&gt;
&lt;p&gt;With NFS we can directly mount the folder in the container. We can control everything from the configuration file. And thanks to the NFS storage we can increase and reduce node without worries as well.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
